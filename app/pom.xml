<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>net.imagej</groupId>
		<artifactId>pom-imagej</artifactId>
		<version>2.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>ij-app</artifactId>

	<name>ImageJ Application</name>
	<description>The app component is the top-level ImageJ application. It brings together all the components into the final application. It launches the Swing user interface by default, but other interfaces are equally possible.</description>
	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-commands</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-core</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-legacy</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-ui</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-options</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-scripting-beanshell</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-scripting-java</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-platforms</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-text</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-tools</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-updater-ssh</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-updater-webdav</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
				<dependency>
			<groupId>${scifio.groupId}</groupId>
			<artifactId>scifio-bf-compat</artifactId>
			<version>1.0.1-SNAPSHOT</version>
			<scope>runtime</scope>
		</dependency>
		    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.5.10</version>
      <scope>runtime</scope>
    </dependency>
	</dependencies>

	<properties>
		<project.rootdir>${basedir}/..</project.rootdir>
	</properties>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/zip.xml</descriptor>
					</descriptors>
					<finalName>imagej-${project.version}</finalName>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>ij-launcher</artifactId>
									<version>${imagej-launcher.version}</version>
									<type>nar</type>
									<outputDirectory>${project.build.directory}/</outputDirectory>
									<destFileName>ij-launcher-${imagej-launcher.version}.jar</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
					<execution>
						<id>unpack</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>ij-launcher</artifactId>
									<version>${imagej-launcher.version}</version>
									<classifier>amd64-Linux-gcc-executable</classifier>
									<type>nar</type>
									<outputDirectory>${project.build.directory}/</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>ij-launcher</artifactId>
									<version>${imagej-launcher.version}</version>
									<classifier>i386-Linux-gcc-executable</classifier>
									<type>nar</type>
									<outputDirectory>${project.build.directory}/</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>ij-launcher</artifactId>
									<version>${imagej-launcher.version}</version>
									<classifier>amd64-Windows-gcc-executable</classifier>
									<type>nar</type>
									<outputDirectory>${project.build.directory}/</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>ij-launcher</artifactId>
									<version>${imagej-launcher.version}</version>
									<classifier>x86-Windows-gcc-executable</classifier>
									<type>nar</type>
									<outputDirectory>${project.build.directory}/</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>ij-launcher</artifactId>
									<version>${imagej-launcher.version}</version>
									<classifier>i386-MacOSX-gcc-executable</classifier>
									<type>nar</type>
									<outputDirectory>${project.build.directory}/</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>ij-launcher</artifactId>
									<version>${imagej-launcher.version}</version>
									<classifier>x86_64-MacOSX-gcc-executable</classifier>
									<type>nar</type>
									<outputDirectory>${project.build.directory}/</outputDirectory>
								</artifactItem>
							</artifactItems>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<packageName>imagej</packageName>
							<mainClass>imagej.Main</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<configuration>
					<executable>java</executable>
					<arguments>
						<argument>-classpath</argument>
						<classpath />
						<argument>imagej.Main</argument>
					</arguments>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!-- This plugin's configuration is used to store Eclipse m2e settings
				     only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId />
										<artifactId />
										<versionRange>${project.version}</versionRange>
										<goals>
											<goal />
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.0,)</versionRange>
										<goals>
											<goal>copy</goal>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<!-- NB: for project parent, in case of partial checkout -->
	<repositories>
		<repository>
			<id>imagej.releases</id>
			<url>http://maven.imagej.net/content/repositories/releases</url>
		</repository>
		<repository>
			<id>imagej.snapshots</id>
			<url>http://maven.imagej.net/content/repositories/snapshots</url>
		</repository>
	</repositories>

	<profiles>
		<!-- The alt-ui profile adds the alternative UI components to the
		     runtime classpath if the ij.ui system property is set.
		     This enables launching ImageJ with an alternative UI; see:
		     http://developer.imagej.net/command-line -->
		<profile>
			<id>alt-ui</id>
			<activation>
				<property>
					<name>ij.ui</name>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>ij-ui-awt</artifactId>
					<version>${project.version}</version>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>ij-ui-pivot</artifactId>
					<version>${project.version}</version>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>ij-ui-swt</artifactId>
					<version>${project.version}</version>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<configuration>
							<arguments>
								<argument>-classpath</argument>
								<classpath />
								<argument>-Dij.ui=${ij.ui}</argument>
								<argument>imagej.Main</argument>
							</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- The swing profile includes the Swing UI components.
		     They are always included unless java.awt.headless is set. -->
		<profile>
			<id>swing</id>
			<activation>
				<property>
					<name>!java.awt.headless</name>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>ij-ui-swing</artifactId>
					<version>${project.version}</version>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>ij-ui-swing-commands</artifactId>
					<version>${project.version}</version>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>ij-ui-swing-script-editor</artifactId>
					<version>${project.version}</version>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>ij-ui-swing-tools</artifactId>
					<version>${project.version}</version>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>ij-ui-swing-updater</artifactId>
					<version>${project.version}</version>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
		</profile>

		<!-- The deps profile builds the imagej-x.y.z-all uber-jar, which is a
		     bundle of ij-app with all dependencies. While we do not encourage
		     its use, it can simplify deployment in some environments; see:
		     http://developer.imagej.net/how-can-i-call-imagej-my-software -->
		<profile>
			<id>deps</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<descriptors>
								<descriptor>src/main/assembly/all.xml</descriptor>
							</descriptors>
							<finalName>imagej-${project.version}</finalName>
							<archive>
								<manifest>
									<mainClass>imagej.Main</mainClass>
								</manifest>
							</archive>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>populate-app</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<descriptors>
								<descriptor>src/main/assembly/dir.xml</descriptor>
							</descriptors>
							<finalName>ImageJ.app</finalName>
							<outputDirectory>${basedir}</outputDirectory>
							<appendAssemblyId>false</appendAssemblyId>
							<attach>false</attach>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
